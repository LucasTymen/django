The Convenience of Templates

Django makes it easier for developers to create templates!

Django uses templates to display information to users. In conventional web development, web pages are written with HTML.
But if templates were written in pure HTML then we don’t really need Django.

Rather, Django gives us Django Template Language (DTL) which lets us inject variables, logic, and control flow inside of our HTML - supercharging our HTML files to do so much more than provide static content.

Django's MTV design pattern showing how models supply the data, views determine what data to show, and templates displaying the data

Templates play an integral part of Django’s MTV design pattern, so you will look into finer detail, how this component relates to the overall process of creating a web app.


What is a Template?

In Django, templates are going to be the user facing content.
These templates are made mostly of HTML, and are usually just HTML files.
However, Django templates usually have added Django Template Language, or DTL, modifications.
We’ll be going into DTL later though, so don’t worry too much about it right now.

In order to create templates, they have to be stored in the application in a folder called templates/.
Another folder needs to be created inside of this templates/ folder that uses the same name of the application.
All of the templates will go into this folder named after the application. The full file path to a template should look like this:

projectname/
 |-- appname/
     |-- templates/
          |-- appname/
              |-- first_template.html

In this lesson we’ll go over creating templates and getting the full use of the DTL inside of those templates to make it easier to design the front end of any Django application.
